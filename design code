
module bitsubtractor(a, b, diff, borrow);
  input [3:0] a, b;
  output reg [3:0] diff;
  output reg borrow;
  reg [4:0] s; 
  integer i;

  always @ (a or b) begin
    s[0] = 0; 
    for(i=0; i<=3; i=i+1) begin
      diff[i] = a[i] ^ b[i] ^ s[i];
      s[i+1] = (~a[i] & b[i]) | (b[i] & s[i]) | (s[i] & ~a[i]);
    end
    borrow = s[4]; 
  end
endmodule
